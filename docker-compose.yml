services:
  backend:
    build: ./backend
    container_name: fastapi_backend
    networks:
      - app_network
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app  # This is okay for dev, but be sure it doesn't override your .env, etc.
    env_file:
      - ./backend/.env  # Loads environment from /backend/.env
    depends_on:
      - postgres
      - minio
      - mongo

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    networks:
      - app_network
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Service name is "minio" so Docker's DNS = "minio"
  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"  # S3-compatible API
      - "9001:9001"  # MinIO console
    volumes:
      - minio_data:/data
    restart: unless-stopped
    networks:
      - app_network

  mongo:
    image: mongo:latest
    container_name: mongo_db
    networks:
      - app_network
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: docdatabase
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  frontend:
    build: ./frontend
    container_name: react_frontend
    networks:
      - app_network
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: always
    volumes:
      - ./frontend:/app
      - /app/node_modules
    
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    networks:
      - app_network
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgres

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
  mongo_data: